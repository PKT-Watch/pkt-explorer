function copyToClipboard(text){var copyElement,range;text&&text!==""&&(copyElement=document.createElement("span"),copyElement.appendChild(document.createTextNode(text)),copyElement.id="tempCopyToClipboard",document.body.append(copyElement),range=document.createRange(),range.selectNode(copyElement),window.getSelection().removeAllRanges(),window.getSelection().addRange(range),document.execCommand("copy"),window.getSelection().removeAllRanges(),copyElement.remove())}async function search(value){if(value!==""){const route=await UTILS.determineRoute(value);window.location.href=route?route:"/search/"}}let page_visible=!0;document.addEventListener("visibilitychange",()=>{page_visible=document.visibilityState==="visible"?!0:!1});const VALUES={NS_ADDRESS:"pkt1q6hqsqhqdgqfd8t3xwgceulu7k9d9w5t2amath0qxyfjlvl3s3u4sjza2g2"},KNOWN_ADDRESS=[{address:"pkt1q6hqsqhqdgqfd8t3xwgceulu7k9d9w5t2amath0qxyfjlvl3s3u4sjza2g2",label:"NS",name:"Network Steward"}];class APIParameters{_Parameters=[];add(key,value){this._Parameters.push({key,value})}buildQuery(){let query="";for(let i=0;i<this._Parameters.length;i++)query+=i===0?`?${this._Parameters[i].key}=${this._Parameters[i].value}`:`&${this._Parameters[i].key}=${this._Parameters[i].value}`;return query}}(function(UTILS){const UNITS=[["PKT",1,"PKT"],["mPKT",1e3,"milli-PKT (thousandths)"],["Î¼PKT",1e6,"micro-PKT (millionths)"],["nPKT",1e9,"nano-PKT (billionths)"]];UTILS.unitsToPkt=(units,formatted,decimals)=>{const value=units/1073741824;return formatted?UTILS.numberWithCommas(value,decimals):value};UTILS.unitsToPkt=(units,decimals,formatted)=>{const pkt=units/1073741824;return formatted===!1?typeof decimals!="undefined"&&decimals>0?pkt.toFixed(decimals):pkt:UTILS.pktToDenomination(pkt,decimals)};UTILS.pktToDenomination=(pkt,decimals)=>{if(typeof decimals=="undefined"&&Number(pkt)<1)return"0.00 PKT";decimals=isNaN(decimals)?0:decimals;pkt=Number(pkt);let fa,u=UNITS[0],i=0;do fa=pkt*UNITS[i][1],u=UNITS[i],i++;while(fa<1&&u[0]!=="nPKT");const str=UTILS.numberWithCommas(fa,decimals),intDec=str.split(".");return parseInt(intDec[0])===0&&parseInt(intDec[1])===0?`0.00 <span class="units">PKT</span>`:intDec.length>1?`${intDec[0]}.${intDec[1]} <span class="units">${u[0]}</span>`:`${intDec[0]} <span class="units">${u[0]}</span>`};UTILS.numberWithCommas=(value,decimals)=>(decimals=typeof decimals=="undefined"?2:decimals,typeof value!="number"&&(value=parseFloat(value)),value.toFixed(decimals).replace(/\B(?=(\d{3})+(?!\d))/g,","));UTILS.timeSince=(date,removeSuffix)=>{typeof date=="string"&&(date=new Date(date));var seconds=Math.floor((new Date-date)/1e3),interval=seconds/31536e3;return interval>2?`${Math.floor(interval)} years${removeSuffix?"":" ago"}`:(interval=seconds/2592e3,interval>1)?`${Math.floor(interval)} months${removeSuffix?"":" ago"}`:(interval=seconds/86400,interval>1)?`${Math.floor(interval)} days${removeSuffix?"":" ago"}`:(interval=seconds/3600,interval>1)?`${Math.floor(interval)} hours${removeSuffix?"":" ago"}`:(interval=seconds/60,interval>1)?(interval=Math.floor(interval),`${Math.floor(interval)} ${interval>1?"minutes":"minute"}${removeSuffix?"":" ago"}`):`< 1 Minute${removeSuffix?"":" ago"}`};UTILS.truncateString=function(value,options){let startChars=options&&options.startChars&&options.startChars>0?options.startChars:16,endChars=options&&options.endChars&&options.endChars>0?options.endChars:16,seperator=options&&options.seperator?options.seperator:"...";return`${value.substring(0,startChars)}${seperator}${value.substring(value.length-endChars)}`};UTILS.truncateAddress=address=>{const startSegment=address.substring(0,8),middleSegment=address.substring(8,address.length-8),endSegment=address.substring(address.length-8);return`<span class="truncated-address">${startSegment}<span>${middleSegment}</span>${endSegment}</span>`};UTILS.decodeCoinbase=coinbase=>coinbase.replace(/[a-f0-9]{2}/g,x=>{const cc=Number("0x"+x);return cc>=32&&cc<127?String.fromCharCode(cc):"\\x"+x});UTILS.minedBy=txn=>{const decoded=UTILS.decodeCoinbase(txn.coinbase);return decoded.includes("Zetahash")?"zetahash.com":decoded.includes("pkt.world")?"pkt.world":decoded.includes("pkteer")?"pkteer.com":decoded.includes("superphenix.net")?"superphenix.net":txn.output[0].address==="pkt1qyrgfajtch4qfjz68fvh9qjfy6l882xawuh7g38"||txn.output[0].address==="pkt1q282hnt3zw7uz4uydsxkuundnqy2s9th95yggps"||txn.output[0].address==="pkt1qsmd3lqt8fasvddjncjfvkhejwrqdj300nmkshd"?"pkt.world":txn.output[0].address==="pkt1qddktnzzsqzxajpyv3z9zxqplff5l3lw5ztln2r"||txn.output[0].address==="pkt1qwuns2e3fu798s0p95tqnps87kvfuegq4lephtu"?"pktpool.io":txn.output[0].address==="pkt1q9pha6uycnnwysmj70uvnrq7ggpx50zz3z2h242"||txn.output[0].address==="pkt1qfhu8l2w7gsk40kekrm5y7w3f2w340s24xulrpg"?"zetahash.com":txn.output[0].address==="pkt1qt7k5qh8l85g84nzn998nxdqkvczv034mg073zx"?"pkteer.com":"Unknown"};UTILS.isNumeric=str=>typeof str!="string"?!1:!isNaN(str)&&!isNaN(parseFloat(str));UTILS.determineRoute=async search=>{if(UTILS.isNumeric(search))return parseInt(search)<0?"":`/block/${search}`;if(/[a-f0-9]{64}/.test(search)){let[block,txn]=await Promise.all([API.getBlock(search),API.getTransaction(search)]);return block?`/block/${search}`:txn?`/tx/${search}`:""}let address=await API.getAddress(search);return address?`/address/${search}`:""};UTILS.formatOwnedAddress=options=>{if(typeof options=="undefined"||typeof options.address!="string")return!1;typeof options.includeAddress=="undefined"&&(options.includeAddress=!1);const ownedAddress=KNOWN_ADDRESS.find(x=>x.address===options.address);return ownedAddress?`<span class="owned" data-owner="${options.useName?ownedAddress.name:ownedAddress.label}"></span>${options.includeAddress?options.address:""}`:typeof options.label=="string"?options.label:options.includeAddress?options.address:""};UTILS.setCookie=(name,value,days)=>{var expires="",date;days&&(date=new Date,date.setTime(date.getTime()+days*864e5),expires="; expires="+date.toUTCString());document.cookie=name+"="+(value||"")+expires+"; path=/"};UTILS.getCookie=name=>{for(var c,nameEQ=name+"=",ca=document.cookie.split(";"),i=0;i<ca.length;i++){for(c=ca[i];c.charAt(0)==" ";)c=c.substring(1,c.length);if(c.indexOf(nameEQ)==0)return c.substring(nameEQ.length,c.length)}return null};UTILS.eraseCookie=name=>{document.cookie=name+"=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;"}})(window.UTILS=window.UTILS||{}),function(THEME){const themeSwitcherEl=document.querySelector("#theme-switcher"),themeSwitcherInputs=themeSwitcherEl.querySelectorAll("input"),THEMES=["light","dark","system"];let selected_theme=UTILS.getCookie("theme")||THEMES[0],prefers_dark_mode=window.matchMedia&&window.matchMedia("(prefers-color-scheme: dark)").matches;THEME.switchTheme=theme=>{if(THEMES.includes(theme)){document.querySelector("html").dataset.theme=theme;UTILS.setCookie("theme",theme,365);selected_theme=theme;const event=new CustomEvent("themeChanged",{detail:selected_theme});themeSwitcherEl.dispatchEvent(event)}};window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change",event=>{prefers_dark_mode=event.matches});THEME.getChartColor=()=>{const darkColor="rgb(60, 173, 239)";return selected_theme===THEMES[1]?darkColor:selected_theme===THEMES[2]&&prefers_dark_mode?darkColor:"rgb(60, 173, 239)"};THEME.getChartLabelColor=()=>{const darkColor="#d7d9dd";return selected_theme===THEMES[1]?darkColor:selected_theme===THEMES[2]&&prefers_dark_mode?darkColor:"#666"};THEME.getSelectedTheme=()=>selected_theme;THEME.getQRColors=()=>{const colors={foreground:"#fff",background:"#000000"};return selected_theme===THEMES[1]?(colors.foreground="#1f2b38",colors.background="rgb(60, 173, 239)"):selected_theme===THEMES[2]&&prefers_dark_mode&&(colors.foreground="#1f2b38",colors.background="rgb(60, 173, 239)"),colors};themeSwitcherInputs.forEach(input=>{input.addEventListener("change",e=>{e.target.checked&&THEME.switchTheme(e.target.value)})});init=()=>{const theme=THEME.getSelectedTheme();themeSwitcherInputs.forEach(input=>{input.checked=input.value===theme,input.addEventListener("change",e=>{e.target.checked&&THEME.switchTheme(e.target.value)})})};window.onpageshow=()=>{setTimeout(()=>{init()},0)}}(window.THEME=window.THEME||{}),function(API){function buildUrl(urlSegement,parameters){return parameters=parameters||new APIParameters,urlSegement.startsWith("/")&&(urlSegement=urlSegement.substring(1)),`${baseUrl}${urlSegement}${parameters.buildQuery()}`}async function makeRequest(url){let response,json;try{response=await fetch(url);json=await response.json()}catch(error){error instanceof SyntaxError}if(response?.ok&&json)return typeof json.results=="undefined"?json:json.results}const baseUrl=API_BASE_URL;API.get=async(urlSegement,parameters)=>{const url=buildUrl(urlSegement,parameters);let response,json;try{response=await fetch(url);json=await response.json()}catch(error){error instanceof SyntaxError}if(response?.ok&&json)return json};API.getTipBlock=async()=>{const url=buildUrl(`chain/down/1/1/`);let response,json;try{response=await fetch(url);json=await response.json()}catch(error){error instanceof SyntaxError}if(response?.ok){if(json)return json.results[0]}else return[]};API.getExternalTipBlock=async()=>{const url=`https://explorer.pkt.cash/api/v1/PKT/pkt/chain/down/1/1/`;let response,json;try{response=await fetch(url);json=await response.json()}catch(error){error instanceof SyntaxError}if(response?.ok){if(json)return json.results[0]}else return[]};API.getBlock=async blockHash=>{if(!blockHash)throw new Error("Block Hash required");const url=buildUrl(`block/${blockHash}`);return await makeRequest(url)};API.getBlockTransactions=async options=>{if(!options||!options.blockHash)throw new Error("Block Hash required");options.limit=options.limit||50;options.page=options.page||1;const url=buildUrl(`block/${options.blockHash}/coins/${options.limit}/${options.page}`);return await makeRequest(url)};API.getBlocks=async options=>{options=options||{};options.limit=options.limit||50;options.page=options.page||1;const url=buildUrl(`chain/down/${options.limit}/${options.page}`);return await makeRequest(url)};API.getTransaction=async txid=>{if(!txid)throw new Error("TXID required");const url=buildUrl(`tx/${txid}`);return await makeRequest(url)};API.getCirculatingSupply=async()=>{return await makeRequest("https://api.pkt.watch/v1/network/circulating-supply")};API.getPrice=async()=>{return await makeRequest("https://api.pkt.watch/v1/network/price")};API.getCoinStats=async()=>{const url=buildUrl(`stats/coins`);return await makeRequest(url)};API.getBlockCount24hr=async()=>{const url=buildUrl(`stats/block-count-24hr`);return await makeRequest(url)};API.getDailyTransactionStats=async()=>{const url=buildUrl(`stats/daily-transactions/`);return await makeRequest(url)};API.getRichList=async options=>{options=options||{};options.limit=options.limit||100;options.page=options.page||1;const url=buildUrl(`stats/richlist/${options.limit}/${options.page}`);return await makeRequest(url)};API.getDailyMinerStats=async()=>{const url=buildUrl(`stats/daily-miners`);return await makeRequest(url)};API.getMiners=async options=>{options=options||{};options.limit=options.limit||100;options.page=options.page||1;const url=buildUrl(`stats/minerlist/${options.limit}/${options.page}`);return await makeRequest(url)};API.getAddress=async address=>{if(!address)throw new Error("Address required");const url=buildUrl(`address/${address}`);return await makeRequest(url)};API.getAddressTransactions=async options=>{if(!options||!options.address)throw new Error("Address required");options.limit=options.limit||50;options.page=options.page||1;options.mining=options.mining||"excluded";const url=buildUrl(`address/${options.address}/coins/${options.limit}/${options.page}?mining=${options.mining}`);return await makeRequest(url)};API.getAddressMiningIncome=async options=>{if(!options||!options.address)throw new Error("Address required");options.limit=options.limit||90;options.page=options.page||1;const url=buildUrl(`address/${options.address}/income/${options.limit}/${options.page}?mining=only`);return await makeRequest(url)}}(window.API=window.API||{});const clipboardControls=document.querySelectorAll(".clipboard-copy");clipboardControls.forEach(control=>{control.addEventListener("click",e=>{const clipboardControl=e.currentTarget;copyToClipboard(clipboardControl.querySelector(".clipboard-copy-value").innerText.trim());clipboardControl.classList.add("copied");setTimeout(()=>{clipboardControl.classList.remove("copied")},1500)})});document.body.addEventListener("click",e=>{if(e.target&&e.target.closest(".expandable-content-control")){const expandableContentEl=e.target.closest(".expandable-content");expandableContentEl.classList.toggle("expanded");expandableContentEl.classList.contains("expanded")||expandableContentEl.closest("#coinbase-transaction-list")&&expandableContentEl.scrollIntoView({behavior:"instant",block:"start",inline:"nearest"})}});document.querySelectorAll(".search-control:not(.address-search-control) input").forEach(input=>{input.addEventListener("keydown",e=>{e=e||window.event;switch(e.which||e.keyCode){case 13:e.preventDefault();search(input.value)}})});document.querySelectorAll(".tab-nav").forEach(tabNav=>{tabNav.addEventListener("click",e=>{if(e.target&&e.target.closest("[data-target]")){const clickedEl=e.target.closest("[data-target]"),target=document.querySelector(clickedEl.dataset.target),group=document.querySelector(clickedEl.dataset.group);tabNav.querySelectorAll("[data-target]").forEach(el=>{el===clickedEl?el.classList.add("active"):el.classList.remove("active")});group.querySelectorAll(".tab").forEach(tab=>{tab===target?tab.classList.remove("d-none"):tab.classList.add("d-none")});const event=new CustomEvent("tabChanged",{detail:clickedEl.dataset.target});tabNav.dispatchEvent(event)}})});document.querySelector("body").addEventListener("click",e=>{e.target&&e.target.closest(".dropup button")&&e.target.closest(".dropup").classList.toggle("active")}),function(ADDRESS_SAVER){const STORAGE_KEY="savedAddresses";ADDRESS_SAVER.addresses=()=>getFromStorage();ADDRESS_SAVER.add=address=>addToStorage(address);ADDRESS_SAVER.remove=address=>removeFromStorage(address);getFromStorage=()=>{let addresses=[];return localStorage.getItem(STORAGE_KEY)&&(addresses=JSON.parse(localStorage.getItem(STORAGE_KEY))),addresses};addToStorage=address=>{const addresses=getFromStorage();return addresses.includes(address)||(addresses.push(address),localStorage.setItem(STORAGE_KEY,JSON.stringify(addresses))),addresses};removeFromStorage=address=>{const addresses=getFromStorage(),filtered=addresses.filter(e=>e!==address);return localStorage.setItem(STORAGE_KEY,JSON.stringify(filtered)),filtered}}(window.ADDRESS_SAVER=window.ADDRESS_SAVER||{}),function(PAGE_HOME){PAGE_HOME.init=()=>{async function getLatestBlocks(){let blocks=await API.getBlocks({limit:5});buildBlockList(blocks)}function buildBlockList(blocks){blocksList.innerHTML="";blocks.forEach(block=>{blocksList.insertAdjacentHTML("beforeend",`
                        <div class="list-item tile">
                            <div class="height">
                                <div class="title">Hash</div>
                                <a href="/block/${block.hash}" class="hash">${UTILS.truncateString(block.hash,{startChars:8,endChars:8})}</a>
                            </div>
                            <div class="height">
                                <div class="title">Height</div>
                                <a href="/block/${block.hash}">${block.height}</a>
                            </div>
                            <div class="age">
                                <div class="title">Age</div>
                                ${UTILS.timeSince(block.time,!0)}
                            </div>
                            <div class="transactions">
                                <div class="title">Transactions</div>
                                ${block.transactionCount}
                            </div>
                        </div>
                    `)})}async function getCoinStats(){await Promise.all([Promise.all([API.getCirculatingSupply(),coinsPrice?API.getPrice():null]).then(values=>{console.log("values",values);const circulatingSupply=values[0];if(coinsCirculating.textContent=`${UTILS.numberWithCommas(circulatingSupply,0)} PKT`,values[1]!==null){const price=values[1].pkt;coinsMarketCap.textContent=`$${UTILS.numberWithCommas(price*parseInt(circulatingSupply),0)} market cap.`;coinsPrice.textContent=`$${price.toFixed(6)}`}}),API.getCoinStats().then(coinStats=>{coinsMax.innerHTML=UTILS.unitsToPkt(parseInt(coinStats.alreadyMined)+parseInt(coinStats.remaining),0),coinsMined.innerHTML=UTILS.unitsToPkt(coinStats.alreadyMined,0),coinsRemaining.innerHTML=UTILS.unitsToPkt(coinStats.remaining,0),coinsReward.innerHTML=UTILS.unitsToPkt(coinStats.reward)}),API.getTipBlock().then(latestBlock=>{coinsHeight.textContent=UTILS.numberWithCommas(latestBlock.height,0);coinsHeightTime.textContent=`Mined ${UTILS.timeSince(latestBlock.time)}`;coinsDifficulty.textContent=UTILS.numberWithCommas(latestBlock.difficulty,0);coinsDifficultyRetarget.textContent=`${latestBlock.blocksUntilRetarget} blocks`;const difficultyPercentageChange=+parseFloat((100-latestBlock.retargetEstimate*100)*-1).toFixed(2);coinsDifficultyNext.innerHTML=difficultyPercentageChange>0?`${UTILS.numberWithCommas(latestBlock.difficulty*latestBlock.retargetEstimate,0)} <span class="text-success small">+${difficultyPercentageChange}%</span>`:`${UTILS.numberWithCommas(latestBlock.difficulty*latestBlock.retargetEstimate,0)} <span class="text-danger small">${difficultyPercentageChange}%</span>`}),API.getBlockCount24hr().then(blockCount24Hr=>{coins24hrBlocks.innerHTML=blockCount24Hr>1440?`${blockCount24Hr} <span class="text-danger small"> +${blockCount24Hr-1440} above target</span>`:blockCount24Hr<1440?`${blockCount24Hr} <span class="text-danger small"> ${blockCount24Hr-1440} below target</span>`:`${blockCount24Hr}`})]);poll()}async function getNetworkStewardAddress(){const address=await API.getAddress("pkt1q6hqsqhqdgqfd8t3xwgceulu7k9d9w5t2amath0qxyfjlvl3s3u4sjza2g2");coinsBurned.innerHTML=UTILS.unitsToPkt(address.burned)}async function getDailyTransactionStats(){let stats=await API.getDailyTransactionStats();stats.splice(0,1);coins24hrTransactions.textContent=UTILS.numberWithCommas(stats[0].transactionCount,0);coins24hrTps.textContent=UTILS.numberWithCommas(stats[0].transactionCount/86400);stats.reverse();new Chart(document.getElementById("chart-transactions"),{type:"bar",data:{labels:stats.map(row=>new Date(row.date).toLocaleDateString()),datasets:[{label:"Daily Transactions",data:stats.map(row=>row.transactionCount),borderColor:THEME.getChartColor(),backgroundColor:THEME.getChartColor(),minBarLength:2}]},options:{responsive:!0,maintainAspectRatio:!1,scales:{x:{display:!1},y:{display:!1}},plugins:{legend:{display:!1}}}})}function poll(){lastPollTime=Date.now();pollingTimer&&clearTimeout(pollingTimer);pollingTimer=setTimeout(()=>{getPollDataAndStart()},6e4)}function getPollDataAndStart(){getCoinStats();getLatestBlocks()}const blocksList=document.querySelector("#blocks-list"),coinsMax=document.querySelector("#coins-max"),coinsMined=document.querySelector("#coins-mined"),coinsRemaining=document.querySelector("#coins-remaining"),coinsCirculating=document.querySelector("#coins-circulating"),coinsHeight=document.querySelector("#coins-height"),coinsHeightTime=document.querySelector("#coins-height-time"),coinsReward=document.querySelector("#coins-reward"),coinsPrice=document.querySelector("#coins-price"),coinsMarketCap=document.querySelector("#coins-market-cap"),coinsDifficulty=document.querySelector("#coins-difficulty"),coinsDifficultyNext=document.querySelector("#coins-difficulty-next"),coinsDifficultyRetarget=document.querySelector("#coins-difficulty-retarget"),coinsBurned=document.querySelector("#coins-burned"),coins24hrTransactions=document.querySelector("#coins-24hr-transactions"),coins24hrTps=document.querySelector("#coins-24hr-tps"),coins24hrBlocks=document.querySelector("#coins-24hr-blocks");let pollingTimer,lastPollTime;getCoinStats();getLatestBlocks();getNetworkStewardAddress();getDailyTransactionStats();document.addEventListener("visibilitychange",()=>{document.visibilityState==="visible"?typeof lastPollTime!="undefined"&&((Date.now()-lastPollTime)/1e3>=60?getPollDataAndStart():poll()):pollingTimer&&clearTimeout(pollingTimer)})}}(window.PAGE_HOME=window.PAGE_HOME||{}),function(PAGE_BLOCKS){PAGE_BLOCKS.init=()=>{async function getBlocks(){btnLoadMore.classList.add("loading");currentPage++;const options={limit:50,page:currentPage};let blocks=await API.getBlocks(options);buildBlockList(blocks);btnLoadMore.classList.remove("d-none");btnLoadMore.classList.remove("loading")}function buildBlockList(blocks){currentPage===1&&(blocksList.innerHTML="",latestBlockHeight=blocks[0].height);blocks.forEach(block=>{currentPage>1&&block.height>=oldestBlockHeight||blocksList.insertAdjacentHTML("beforeend",buildListItem(block))});oldestBlockHeight=blocks[blocks.length-1].height;updateBlockTimes()}function buildListItem(block){return`
                    <div class="list-item tile" data-time="${block.time}">
                        <div class="height">
                            <div class="title">Hash</div>
                            <a href="/block/${block.hash}" class="hash">${UTILS.truncateString(block.hash,{startChars:8,endChars:8})}</a>
                        </div>
                        <div class="height">
                            <div class="title">Height</div>
                            <a href="/block/${block.hash}">${block.height}</a>
                        </div>
                        <div class="age">
                            <div class="title">Age</div>
                            <span class="time-since">${UTILS.timeSince(block.time,!0)}</span>
                        </div>
                        <div class="transactions">
                            <div class="title">Transactions</div>
                            ${block.transactionCount}
                        </div>
                        <!--
                        <div class="difficulty">
                            <div class="title">Difficulty</div>
                            ${parseInt(block.difficulty)}
                        </div>
                        <div class="size">
                            <div class="title">Size</div>
                            ${block.size}
                        </div>
                        -->
                    </div>
                `}function updateBlockTimes(){blocksList.querySelectorAll(".list-item").forEach(listItem=>{const blockTime=listItem.dataset.time;listItem.querySelector(".time-since").textContent=UTILS.timeSince(blockTime,!0)})}async function getNewBlocks(){console.log(`getNewBlocks() latestBlockHeight: ${latestBlockHeight}`);let blocks=await API.getBlocks({limit:10,page:1});blocks[0].height>latestBlockHeight&&(blocks.reverse(),blocks.forEach(block=>{block.height<=latestBlockHeight||(console.log(`adding block ${block.height}`),blocksList.insertAdjacentHTML("afterbegin",buildListItem(block)))}));latestBlockHeight=blocks[blocks.length-1].height;updateBlockTimes()}async function getCoinStats(){let[coinStats,latestBlock,blockCount24Hr]=await Promise.all([API.getCoinStats(),API.getTipBlock(),API.getBlockCount24hr()]);coinsReward.innerHTML=UTILS.unitsToPkt(coinStats.reward);coinsHeight.textContent=UTILS.numberWithCommas(latestBlock.height,0);coinsHeightTime.textContent=`Mined ${UTILS.timeSince(latestBlock.time)}`;coinsDifficulty.textContent=UTILS.numberWithCommas(latestBlock.difficulty,0);coins24hrBlocks.innerHTML=blockCount24Hr>1440?`${blockCount24Hr} <span class="text-danger small"> +${blockCount24Hr-1440} above target</span>`:blockCount24Hr<1440?`${blockCount24Hr} <span class="text-danger small"> ${blockCount24Hr-1440} below target</span>`:`${blockCount24Hr}`;const difficultyPercentageChange=+parseFloat((100-latestBlock.retargetEstimate*100)*-1).toFixed(2);coinsDifficultyNext.innerHTML=difficultyPercentageChange>0?`${UTILS.numberWithCommas(latestBlock.difficulty*latestBlock.retargetEstimate,0)} <span class="text-success small">+${difficultyPercentageChange}%</span>`:`${UTILS.numberWithCommas(latestBlock.difficulty*latestBlock.retargetEstimate,0)} <span class="text-danger small">${difficultyPercentageChange}%</span>`;coinsDifficultyRetarget.textContent=`${latestBlock.blocksUntilRetarget} blocks`;poll()}async function getDailyTransactionStats(){let stats=await API.getDailyTransactionStats();stats.splice(0,1);coins24hrTransactions.textContent=UTILS.numberWithCommas(stats[0].transactionCount);coins24hrTps.textContent=UTILS.numberWithCommas(stats[0].transactionCount/86400);stats.reverse();new Chart(document.getElementById("chart-transactions"),{type:"bar",data:{labels:stats.map(row=>new Date(row.date).toLocaleDateString()),datasets:[{label:"Daily Transactions",data:stats.map(row=>row.transactionCount),borderColor:THEME.getChartColor(),backgroundColor:THEME.getChartColor(),minBarLength:2}]},options:{responsive:!0,maintainAspectRatio:!1,scales:{x:{display:!1},y:{display:!1}},plugins:{legend:{display:!1}}}})}function poll(){lastPollTime=Date.now();pollingTimer&&clearTimeout(pollingTimer);pollingTimer=setTimeout(()=>{getPollDataAndStart()},6e4)}function getPollDataAndStart(){getCoinStats();getNewBlocks()}const blocksList=document.querySelector("#blocks-list"),coinsHeight=document.querySelector("#coins-height"),coinsHeightTime=document.querySelector("#coins-height-time"),coinsReward=document.querySelector("#coins-reward"),coinsDifficulty=document.querySelector("#coins-difficulty"),coinsDifficultyNext=document.querySelector("#coins-difficulty-next"),coinsDifficultyRetarget=document.querySelector("#coins-difficulty-retarget"),coins24hrTransactions=document.querySelector("#coins-24hr-transactions"),coins24hrTps=document.querySelector("#coins-24hr-tps"),coins24hrBlocks=document.querySelector("#coins-24hr-blocks"),btnLoadMore=document.querySelector("#btnLoadMore");let pollingTimer,lastPollTime,currentPage=0,latestBlockHeight=0,oldestBlockHeight=0;getCoinStats();getBlocks();getDailyTransactionStats();document.addEventListener("visibilitychange",()=>{document.visibilityState==="visible"?typeof lastPollTime!="undefined"&&((Date.now()-lastPollTime)/1e3>=60?getPollDataAndStart():poll()):pollingTimer&&clearTimeout(pollingTimer)});btnLoadMore.addEventListener("click",getBlocks)}}(window.PAGE_BLOCKS=window.PAGE_BLOCKS||{}),function(PAGE_BLOCK){PAGE_BLOCK.init=()=>{async function getBlock(){if(block=await API.getBlock(BLOCKHASH),typeof block=="undefined"&&(window.location="/search/"),UTILS.isNumeric(BLOCKHASH)){window.location.href=`/block/${block.hash}`;return}buildBlockStats(block);getLatestTransactions();getTipBlock();await getNextBlock();checkStatus()}async function getNextBlock(){const url=`chain/up/1/${block.height+2}/`;let res=await API.get(url);if(typeof res=="undefined"){setTimeout(()=>{getNextBlock()},6e4);return}nextBlock=res.results[0];btnNextBlock.href=`/block/${nextBlock.hash}`;btnNextBlock.classList.remove("disabled-state");const icon=btnNextBlock.querySelector(".icon");icon.classList.remove("spin");icon.textContent="chevron_right"}function buildBlockStats(block){document.title=`${document.title} - Block ${block.height}`;blockSize.textContent=`${UTILS.numberWithCommas(block.size/1024,2)} KB`;blockDifficulty.textContent=UTILS.numberWithCommas(block.difficulty,0);blockTransactions.textContent=UTILS.numberWithCommas(block.transactionCount,0);blockDate.textContent=new Date(block.time).toLocaleString();blockHeight.textContent=block.height;blockAnnouncements.textContent=UTILS.numberWithCommas(block.pcAnnCount,0);blockAnnouncementDifficulty.textContent=UTILS.numberWithCommas(block.pcAnnDifficulty,2);blockMerkleRoot.textContent=block.merkleRoot;blockNonce.textContent=block.nonce;btnPreviousBlock.href=`/block/${block.previousBlockHash}`;btnPreviousBlock.querySelector(".height").textContent=block.height-1;btnNextBlock.querySelector(".height").textContent=block.height+1}async function getLatestTransactions(){btnLoadMore.classList.add("loading");pageCount=Math.ceil(block.transactionCount/50);pageCount>maxInitialPageCount&&blockValueEstimate.classList.remove("d-none");await getNextTransactions(!1);const txns=[];for(let i=1;i<(pageCount>maxInitialPageCount?maxInitialPageCount:pageCount);i++){currentPage++;const options={blockHash:block.hash,page:currentPage};let t=await API.getBlockTransactions(options);typeof t!="undefined"&&(txns.push(...t),buildTransactionsList(txns,!0))}btnLoadMore.classList.remove("loading")}async function getNextTransactions(append){btnLoadMore.classList.add("loading");currentPage++;const options={blockHash:block.hash,page:currentPage},txns=await API.getBlockTransactions(options);buildTransactionsList(txns,append);btnLoadMore.classList.remove("loading")}function buildTransactionsList(txns,append){if(typeof txns=="undefined"){btnLoadMore.classList.add("d-none");noFurtherTransactions.classList.remove("d-none");return}txns.length>1&&txns.sort((a,b)=>(a.value=parseInt(a.value),b.value=parseInt(b.value),a.value>b.value?-1:b.value>a.value?1:0));append||(coinbaseTransactionList.innerHTML="",txns.length>1&&(transactionList.innerHTML="",transactionListContainer.classList.remove("d-none")));currentPage<pageCount&&btnLoadMore.classList.remove("d-none");txns.forEach(txn=>{const listItem=createListItemElement(txn),valueOutputEl=listItem.querySelector(".value-output"),inputsEl=listItem.querySelector(".inputs"),outputsEl=listItem.querySelector(".outputs"),isCoinbase=txn.coinbase!=="";let value=parseInt(txn.value);totalValue+=value;isCoinbase?(blockPool.textContent=UTILS.minedBy(txn),blockCoinbase.textContent=UTILS.decodeCoinbase(txn.coinbase),blockReward.innerHTML=UTILS.unitsToPkt(txn.value),inputsEl.insertAdjacentElement("beforeend",createCoinbaseInputElement())):txn.input.forEach(input=>{input.isInput=!0,inputsEl.insertAdjacentElement("beforeend",createInputOutputElement(input))});txn.output.forEach(output=>{output.isCoinbase=isCoinbase,output.isOutput=!0,output.isChange=!isCoinbase&&txn.input.some(x=>x.address===output.address),output.isFolding=!isCoinbase&&txn.output.length===1&&txn.input.some(x=>x.address===output.address),output.isChange&&!output.isFolding&&(value-=parseInt(output.value)),outputsEl.insertAdjacentElement("beforeend",createInputOutputElement(output))});valueOutputEl.innerHTML=UTILS.unitsToPkt(value,2);isCoinbase?coinbaseTransactionList.insertAdjacentElement("beforeend",listItem):transactionList.insertAdjacentElement("beforeend",listItem)});blockValue.innerHTML=UTILS.unitsToPkt(totalValue,0)}function createListItemElement(transaction){const html=`
                <div class="list-item tile expandable-content ${chkExpandTransactions.checked?"expanded":""}">
                    <div class="header expander">
                        <div class="txid">
                            <a href="/tx/${transaction.txid}" class="hash">${transaction.txid}</a>
                        </div>
                        <div class="value">
                            <span class="value-output"></span>
                        </div>
                        <div>
                            <button type="button" class="btn btn-icon btn-xs btn-light expandable-content-control">
                                <span class="material-icons">expand_less</span>
                            </button>
                        </div>
                        <div class="io title send-receive-stat">
                            ${transaction.input.length} ${transaction.input.length===1?"Sender":"Senders"} <span class="material-icons">east</span> ${transaction.output.length} ${transaction.output.length===1?"Recipient":"Recipients"}
                        </div>
                    </div>
                    <div class="io-list expandable pt-3">
                        <div>
                            <div class="title">${transaction.input.length} ${transaction.input.length===1?"Sender":"Senders"}</div>
                            <div class="inputs"></div>
                        </div>
                        <div>
                            <div class="title">${transaction.output.length} ${transaction.output.length===1?"Recipient":"Recipients"}</div>
                            <div class="outputs"></div>
                        </div>
                    </div>
                </div>
            `,template=document.createElement("template");return template.innerHTML=html.trim(),template.content.firstChild}function createInputOutputElement(io){function buildTxType(){return io.isInput||io.isCoinbase?"":io.isFolding?io.isChange?'<div class="tx-type folding"><span class="material-icons">sync<\/span><\/div>':"":io.isChange?'<div class="tx-type change">Change<\/div>':""}let html;html=io.address.startsWith("script:")?`
                    <div class="list-item tile">
                        <div class="address">
                            <div class="hash">${io.address}</div>
                        </div>
                    </div>`:`
                    <div class="list-item tile">
                        <div class="address">
                            <div>${UTILS.formatOwnedAddress({address:io.address,useName:!0})}</div><a href="/address/${io.address}" class="hash">${io.address}</a>
                        </div>
                        <div class="value">
                            <div class="value-pkt">${UTILS.unitsToPkt(io.value,2)}</div> ${buildTxType()}
                        </div>
                    </div>
                `;const template=document.createElement("template");return template.innerHTML=html.trim(),template.content.firstChild}function createCoinbaseInputElement(){const html=`
                <div class="list-item list-item-coinbase tile">
                    <span class="icon material-icons">toll</span> Newly minted coins
                </div>
            `,template=document.createElement("template");return template.innerHTML=html.trim(),template.content.firstChild}async function getTipBlock(){const tipBlock=await API.getTipBlock();blockConfirmations.textContent=tipBlock.height!=block.height?tipBlock.height-block.height:"0"}function createOrphanAnnouncement(){announcementContainer.insertAdjacentHTML("beforebegin",`
                <div class="announcement tile">
                    <span class="icon material-icons">fork_right</span>
                    <div class="body">
                        <div class="title">Orphan Block</div>
                        <div class="message">This block is part of a fork that is not in the main chain.</div>
                    </div>
                    <div class="controls">
                        <a href="https://www.investopedia.com/terms/o/orphan-block-cryptocurrency.asp" target="_blank">
                            <span class="material-icons">question_mark</span>
                        </a>
                    </div>
                </div>
            `)}function checkStatus(){let isOrphan=!1;nextBlock&&block.hash!=nextBlock.previousBlockHash&&(isOrphan=!0);isOrphan&&createOrphanAnnouncement()}const transactionList=document.querySelector("#transaction-list"),transactionListContainer=document.querySelector("#transaction-list-container"),coinbaseTransactionList=document.querySelector("#coinbase-transaction-list"),blockHash=document.querySelector("#block-hash"),blockSize=document.querySelector("#block-size"),blockDifficulty=document.querySelector("#block-difficulty"),blockTransactions=document.querySelector("#block-transactions"),blockDate=document.querySelector("#block-date"),blockHeight=document.querySelector("#block-height"),blockAnnouncements=document.querySelector("#block-announcements"),blockAnnouncementDifficulty=document.querySelector("#block-announcement-difficulty"),blockPool=document.querySelector("#block-pool"),blockConfirmations=document.querySelector("#block-confirmations"),blockCoinbase=document.querySelector("#block-coinbase"),blockReward=document.querySelector("#block-reward"),blockSendersCount=document.querySelector("#block-senders-count"),blockMerkleRoot=document.querySelector("#block-merkle-root"),blockNonce=document.querySelector("#block-nonce"),blockValue=document.querySelector("#block-value"),blockValueEstimate=document.querySelector("#block-value-estimate"),btnPreviousBlock=document.querySelector("#btnPreviousBlock"),btnNextBlock=document.querySelector("#btnNextBlock"),btnLoadMore=document.querySelector("#btnLoadMore"),chkExpandTransactions=document.querySelector("#chkExpandTransactions"),noFurtherTransactions=document.querySelector("#no-further-transactions"),announcementContainer=document.querySelector("#announcement-container");let block,nextBlock,currentPage=0,pageCount=0;const maxInitialPageCount=5;let totalValue=0;getBlock();UTILS.isNumeric(BLOCKHASH)||(blockHash.innerHTML=`<span class="clipboard-copy-value">${BLOCKHASH}</span> <span class="icon"></span>`);btnLoadMore.addEventListener("click",()=>getNextTransactions(!0));chkExpandTransactions.addEventListener("change",()=>{const listItems=transactionList.querySelectorAll(".expandable-content");listItems.forEach(el=>{chkExpandTransactions.checked?el.classList.add("expanded"):el.classList.remove("expanded")})})}}(window.PAGE_BLOCK=window.PAGE_BLOCK||{}),function(PAGE_TX){PAGE_TX.init=()=>{async function getTransaction(){tx=await API.getTransaction(TXHASH);typeof tx=="undefined"&&(window.location="/search/");buildTransactionStats(tx);buildTransactionsList(tx);getTipBlock();await getNextBlock();checkStatus()}function buildTransactionStats(tx){txSize.textContent=`${UTILS.numberWithCommas(tx.size/1024,2)} KB`;txDate.textContent=new Date(tx.firstSeen).toLocaleString([],{year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit"});typeof tx.blockHeight!="undefined"?txHeight.innerHTML=`<a href="/block/${tx.blockHash}">${tx.blockHeight}</a>`:txHeight.textContent="-";txValue.innerHTML=UTILS.unitsToPkt(tx.value,2)}async function getRewardStats(){const url=`stats/coins/${tx.blockHeight}/`;let res=await API.get(url);if(typeof res!="undefined")return res}async function buildTransactionsList(txn){const coinStats=await getRewardStats();txn.output.sort((a,b)=>(a.value=parseInt(a.value),b.value=parseInt(b.value),a.value>b.value||b.address.startsWith("script")?-1:b.value>a.value||a.address.startsWith("script")?1:0));transactionList.innerHTML="";let fee=0;const listItem=createListItemElement(txn),inputsEl=listItem.querySelector(".inputs"),outputsEl=listItem.querySelector(".outputs"),isCoinbase=txn.coinbase!=="";isCoinbase?inputsEl.insertAdjacentElement("beforeend",createCoinbaseInputElement()):txn.input.forEach(input=>{input.isInput=!0,inputsEl.insertAdjacentElement("beforeend",createInputOutputElement(input)),fee+=parseInt(input.value)});txn.output.forEach(output=>{output.isCoinbase=isCoinbase,output.isOutput=!0,output.isChange=!isCoinbase&&txn.input.some(x=>x.address===output.address),output.isFolding=!isCoinbase&&txn.output.length===1&&txn.input.some(x=>x.address===output.address),outputsEl.insertAdjacentElement("beforeend",createInputOutputElement(output)),fee-=parseInt(output.value)});transactionList.insertAdjacentElement("beforeend",listItem);fee=isCoinbase?-parseInt(coinStats.reward)+fee*-1:fee;txFee.innerHTML=UTILS.unitsToPkt(fee,2)}function createListItemElement(transaction){const html=`
                <div class="list-item tile expanded">
                    <div class="io-list expandable">
                        <div>
                            <div class="title">${transaction.input.length} ${transaction.input.length===1?"Sender":"Senders"}</div>
                            <div class="inputs"></div>
                        </div>
                        <div>
                            <div class="title">${transaction.output.length} ${transaction.output.length===1?"Recipient":"Recipients"}</div>
                            <div class="outputs"></div>
                        </div>
                    </div>
                </div>
            `,template=document.createElement("template");return template.innerHTML=html.trim(),template.content.firstChild}function createInputOutputElement(io){function buildTxType(){return io.isInput||io.isCoinbase?"":io.isFolding?'<div class="tx-type folding"><span class="material-icons">sync<\/span><\/div>':io.isChange?'<div class="tx-type change">Change<\/div>':""}let html;html=io.address.startsWith("script:")?`
                    <div class="list-item tile">
                        <div class="address">
                            <div>${io.address}</div>
                        </div>
                    </div>
                `:`
                    <div class="list-item tile">
                        <div class="address">
                            <div>${UTILS.formatOwnedAddress({address:io.address,useName:!0})}</div><a href="/address/${io.address}" class="hash">${io.address}</a>
                        </div>
                        <div class="value">
                            <div class="value-pkt">${UTILS.unitsToPkt(io.value,2)}</div> ${buildTxType()}
                        </div>
                    </div>
                `;const template=document.createElement("template");return template.innerHTML=html.trim(),template.content.firstChild}function createCoinbaseInputElement(){const html=`
                <div class="list-item list-item-coinbase tile">
                    <span class="icon material-icons">toll</span> Newly minted coins
                </div>
            `,template=document.createElement("template");return template.innerHTML=html.trim(),template.content.firstChild}function createStatusElement(isConfirmed,isOrphan){return isConfirmed?`<div class="status-indicator confirmed"><span class="material-icons icon">verified</span>Confirmed</div>`:isOrphan?`<div class="status-indicator orphaned"><span class="material-icons icon">fork_right</span>Orphaned</div>`:`<div class="status-indicator unconfirmed"><span class="material-icons icon">update</span>Unconfirmed</div>`}function createOrphanAnnouncement(){announcementContainer.insertAdjacentHTML("beforebegin",`
                <div class="announcement tile">
                    <span class="icon material-icons">fork_right</span>
                    <div class="body">
                        <div class="title">Orphaned Transaction</div>
                        <div class="message">This transaction is part of an orphan block.</div>
                    </div>
                    <div class="controls">
                        <a href="https://www.investopedia.com/terms/o/orphan-block-cryptocurrency.asp" target="_blank">
                            <span class="material-icons">question_mark</span>
                        </a>
                    </div>
                </div>
            `)}async function getNextBlock(){const url=`chain/up/1/${tx.blockHeight+2}/`;let res=await API.get(url);typeof res!="undefined"&&(nextBlock=res.results[0])}async function getTipBlock(){const tipBlock=await API.getTipBlock();txConfirmations.textContent=tx.blockHeight&&tipBlock.height!=tx.blockHeight?tipBlock.height-tx.blockHeight:"0"}function checkStatus(){let isConfirmed=!0,isOrphan=!1;tx.blockHash&&tx.blockHeight?nextBlock&&tx.blockHash!=nextBlock.previousBlockHash&&(isConfirmed=!1):isConfirmed=!1;tx.coinbase&&!isConfirmed&&(isOrphan=!0);txStatus.innerHTML=createStatusElement(isConfirmed,isOrphan);isOrphan&&createOrphanAnnouncement()}const transactionList=document.querySelector("#transaction-list"),txHash=document.querySelector("#tx-hash"),txSize=document.querySelector("#tx-size"),txDate=document.querySelector("#tx-date"),txHeight=document.querySelector("#tx-height"),txStatus=document.querySelector("#tx-status"),txConfirmations=document.querySelector("#tx-confirmations"),txValue=document.querySelector("#tx-value"),txFee=document.querySelector("#tx-fee"),announcementContainer=document.querySelector("#announcement-container");let tx,nextBlock;txHash.innerHTML=`<span class="clipboard-copy-value">${TXHASH}</span> <span class="icon"></span>`;getTransaction()}}(window.PAGE_TX=window.PAGE_TX||{}),function(PAGE_ADDRESS){PAGE_ADDRESS.init=()=>{async function getAddress(){address=await API.getAddress(ADDRESS);typeof address=="undefined"&&(window.location="/search/");buildAddressStats(address)}function buildAddressStats(address){addressBalance.innerHTML=UTILS.unitsToPkt(address.balance,2);addressBalanceCount.textContent=UTILS.numberWithCommas(address.balanceCount,0);addressUnconfirmedReceived.innerHTML=UTILS.unitsToPkt(address.unconfirmedReceived,0);addressTransactions.textContent=UTILS.numberWithCommas(address.spentCount+address.recvCount,0);addressMineCount.textContent=UTILS.numberWithCommas(address.mineCount,0);addressMined24.innerHTML=UTILS.unitsToPkt(address.mined24,0);addressFirstSeen.textContent=address.firstSeen?new Date(address.firstSeen).toLocaleDateString():"Never";addressOwner.innerHTML=UTILS.formatOwnedAddress({address:ADDRESS,label:"Unknown",includeAddress:!1,useName:!0});burnedEl&&(addressBurned.innerHTML=UTILS.unitsToPkt(address.burned,2),burnedEl.classList.remove("d-none"))}async function getLatestTransactions(){btnLoadMore.classList.add("loading");currentPage++;const options={address:ADDRESS,limit:100,page:currentPage};let txns=await API.getAddressTransactions(options);buildTransactionsList(txns);btnLoadMore.classList.remove("loading")}function determineTransactionType(txn){let direction="",isSend=!1,isReceive=!1,isFolding=!1;return txn.input.forEach(inp=>{inp.address==ADDRESS&&(direction="-",isSend=!0)}),direction==""?txn.output.forEach(out=>{out.address==ADDRESS&&(direction="+",isReceive=!0)}):txn.output.forEach(out=>{if(out.address==ADDRESS){txn.output.length==1&&(isFolding=!0,isSend=!1);return}}),{isSend,isReceive,isFolding}}function buildTxType(txn){return txn.isSend?'<div class="tx-type send"><span class="material-icons">remove_circle<\/span><\/div>':txn.isReceive?'<div class="tx-type receive"><span class="material-icons">add_circle<\/span><\/div>':txn.isFolding?'<div class="tx-type folding"><span class="material-icons">sync<\/span><\/div>':void 0}function buildTransactionsList(txns){if(currentPage==1){if(txns.length===0){transactionList.remove();noTransactions.classList.remove("d-none");return}txns.length>20&&btnLoadMore.classList.remove("d-none");transactionList.innerHTML=""}else txns.length===0?(btnLoadMore.classList.add("d-none"),noFurtherTransactions.classList.remove("d-none")):txns.splice(0,1);txns.forEach(txn=>{const{isSend,isReceive,isFolding}=determineTransactionType(txn);txn.isSend=isSend;txn.isReceive=isReceive;txn.isFolding=isFolding;const listItem=createListItemElement(txn),valueOutputEl=listItem.querySelector(".value-output"),inputsEl=listItem.querySelector(".inputs"),outputsEl=listItem.querySelector(".outputs"),txTypeEl=listItem.querySelector(".type"),isCoinbase=txn.coinbase!=="";let value=parseInt(txn.value);txTypeEl.innerHTML=buildTxType(txn);isCoinbase?inputsEl.insertAdjacentElement("beforeend",createCoinbaseInputElement()):txn.input.forEach(input=>{input.isInput=!0,inputsEl.insertAdjacentElement("beforeend",createInputOutputElement(input))});txn.output.forEach(output=>{output.isCoinbase=isCoinbase,output.isOutput=!0,output.isChange=!isCoinbase&&txn.input.some(x=>x.address===output.address),output.isFolding=!isCoinbase&&txn.output.length===1&&txn.input.some(x=>x.address===output.address),txn.isSend||output.address===ADDRESS?txn.isSend&&output.address===ADDRESS&&(value-=parseInt(output.value)):value-=parseInt(output.value),outputsEl.insertAdjacentElement("beforeend",createInputOutputElement(output))});valueOutputEl.innerHTML=UTILS.unitsToPkt(value,2);isCoinbase?coinbaseTransactionList.insertAdjacentElement("beforeend",listItem):transactionList.insertAdjacentElement("beforeend",listItem)})}function createListItemElement(transaction){const html=`
                <div class="list-item tile expandable-content ${chkExpandTransactions.checked?"expanded":""}">
                    <div class="header expander">
                            ${transaction.blockTime?'<div class="status-indicator confirmed"><span class="material-icons icon">verified<\/span><\/div>':'<div class="status-indicator unconfirmed"><span class="material-icons icon">update<\/span><\/div>'}               
                        <div class="date">
                            ${new Date(transaction.firstSeen).toLocaleString()}
                        </div>
                        <div class="value">
                            <span class="value-output"></span>
                        </div>
                        <div class="type"></div>
                    </div>
                    <div class="footer">
                        <div>
                            <div class="txid">
                                <div class="title">Transaction Hash</div>
                                <a href="/tx/${transaction.txid}" class="hash">${transaction.txid}</a>
                            </div>
                            <div class="io title send-receive-stat">
                                ${transaction.input.length} ${transaction.input.length===1?"Sender":"Senders"} <span class="material-icons">east</span> ${transaction.output.length} ${transaction.output.length===1?"Recipient":"Recipients"}
                            </div>
                        </div>
                        <div>
                            <button type="button" class="btn btn-icon btn-xs btn-light expandable-content-control">
                                <span class="material-icons">expand_less</span>
                            </button>
                        </div>
                
                    </div>
                    <div class="io-list expandable">
                        <div>
                            <div class="title">${transaction.input.length} ${transaction.input.length===1?"Sender":"Senders"}</div>
                            <div class="inputs"></div>
                        </div>
                        <div>
                            <div class="title">${transaction.output.length} ${transaction.output.length===1?"Recipient":"Recipients"}</div>
                            <div class="outputs"></div>
                        </div>
                    </div>
                </div>
            `,template=document.createElement("template");return template.innerHTML=html.trim(),template.content.firstChild}function createInputOutputElement(io){function buildTxType(){return io.isInput||io.isCoinbase?"":io.isChange&&!io.isFolding?'<div class="tx-type change">Change<\/div>':""}const html=`
                <div class="list-item tile">
                    <div class="address">
                        ${io.address==ADDRESS?"This address":io.address.startsWith("script:")?`<span class="hash">${io.address}</span>`:`<div>${UTILS.formatOwnedAddress({address:io.address,useName:!0})}</div><a href="/address/${io.address}" class="hash">${io.address}</a>`}
                    </div>
                    <div class="value">
                        <div class="value-pkt">${UTILS.unitsToPkt(io.value,2)}</div> ${buildTxType()}
                    </div>
                </div>
            `,template=document.createElement("template");return template.innerHTML=html.trim(),template.content.firstChild}async function getMiningIncome(){currentPageMiningIncome++;btnLoadMoreMiningIncome.classList.add("loading");const options={address:ADDRESS,limit:90,page:currentPageMiningIncome};let income=await API.getAddressMiningIncome(options);if(income.length===0){btnLoadMoreMiningIncome.remove();return}if(currentPageMiningIncome>1&&income.splice(0,1),income.forEach(miningIncome=>{miningIncomeList.insertAdjacentHTML("beforeend",`
                    <div class="list-item">
                        <div>${new Date(miningIncome.date).toLocaleDateString()}</div>
                        <div class="value">${UTILS.unitsToPkt(miningIncome.received,3)}</div>
                    </div>
                `)}),btnLoadMoreMiningIncome.classList.remove("loading"),currentPageMiningIncome===1){income.reverse();const incomeValues=income.map(row=>UTILS.unitsToPkt(row.received,0,!1));let summedValues=incomeValues.reduce(function(a,b){return a+b},0);if(summedValues===0)return;chartMiningIncomeContainer.classList.remove("d-none");new Chart(document.getElementById("chart-mining-income"),{type:"bar",data:{labels:income.map(row=>new Date(row.date).toLocaleDateString()),datasets:[{label:"Income",data:incomeValues,borderColor:THEME.getChartColor(),backgroundColor:THEME.getChartColor(),minBarLength:2}]},options:{responsive:!0,maintainAspectRatio:!1,scales:{x:{display:!1},y:{display:!1}},plugins:{legend:{display:!1}}}})}}function checkAddressSavedStatus(){const savedAddresses=ADDRESS_SAVER.addresses();savedAddresses.includes(ADDRESS)&&saveAddressControl.classList.add("saved")}function initMiningStats(){PAGE_MINING_STATS.init(ADDRESS)}const transactionList=document.querySelector("#transaction-list"),miningIncomeList=document.querySelector("#mining-income-list"),addressQrCode=document.querySelector("#address-qrcode"),addressBalance=document.querySelector("#address-balance"),addressBurned=document.querySelector("#address-burned"),burnedEl=document.querySelector(".burned"),addressBalanceCount=document.querySelector("#address-balance-count"),addressUnconfirmedReceived=document.querySelector("#address-unconfirmed-received"),addressTransactions=document.querySelector("#address-transactions"),addressMineCount=document.querySelector("#address-mine-count"),addressMined24=document.querySelector("#address-mined24"),addressFirstSeen=document.querySelector("#address-first-seen"),addressOwner=document.querySelector("#address-owner"),btnLoadMore=document.querySelector("#btnLoadMore"),btnLoadMoreMiningIncome=document.querySelector("#btnLoadMoreMiningIncome"),chartMiningIncomeContainer=document.querySelector("#chart-mining-income-container"),noTransactions=document.querySelector("#no-transactions"),noFurtherTransactions=document.querySelector("#no-further-transactions"),chkExpandTransactions=document.querySelector("#chkExpandTransactions"),saveAddressControl=document.querySelector(".save-address-control"),tabNav=document.querySelector(".tab-nav");let address,currentPage=0,currentPageMiningIncome=0,miningStatsInitialised=!1;var qrcode=new QRCode(addressQrCode,{text:ADDRESS,width:80,height:80,colorDark:THEME.getQRColors().background,colorLight:THEME.getQRColors().foreground,correctLevel:QRCode.CorrectLevel.L});getLatestTransactions();getAddress();getMiningIncome();btnLoadMore.addEventListener("click",getLatestTransactions);btnLoadMoreMiningIncome.addEventListener("click",getMiningIncome);chkExpandTransactions.addEventListener("change",()=>{const listItems=transactionList.querySelectorAll(".expandable-content");listItems.forEach(el=>{chkExpandTransactions.checked?el.classList.add("expanded"):el.classList.remove("expanded")})});saveAddressControl.addEventListener("click",()=>{saveAddressControl.classList.contains("saved")?(saveAddressControl.classList.remove("saved"),ADDRESS_SAVER.remove(ADDRESS)):(saveAddressControl.addEventListener("animationend",function(){saveAddressControl.classList.remove("saving");saveAddressControl.classList.add("saved")},{once:!0}),saveAddressControl.classList.add("saving"),ADDRESS_SAVER.add(ADDRESS))});checkAddressSavedStatus();tabNav.addEventListener("tabChanged",e=>{e.detail==="#mining-stats-container"?(miningStatsInitialised||(miningStatsInitialised=!0,miningStatsInitialised=!0,initMiningStats()),window.location.hash="stats"):history.replaceState(null,null," ")});window.location.hash&&window.location.hash==="#stats"&&tabNav.querySelector('[data-target="#mining-stats-container"]').click()}}(window.PAGE_ADDRESS=window.PAGE_ADDRESS||{}),function(PAGE_RICH_LIST){PAGE_RICH_LIST.init=()=>{async function getRichList(){btnLoadMore.classList.add("loading");currentPage++;const options={limit:100,page:currentPage};let addresses=await API.getRichList(options);buildList(addresses);btnLoadMore.classList.remove("d-none");btnLoadMore.classList.remove("loading")}function buildList(addresses){currentPage===1&&(richList.innerHTML="");addresses.forEach(address=>{index++,richList.insertAdjacentHTML("beforeend",`
                        <div class="list-item tile">
                            <div class="rank"><span class="indicator">${index}</span>${UTILS.formatOwnedAddress({address:address.address,label:"",useName:!0})}</div>
                            <div class="address">
                                <a href="/address/${address.address}" class="hash">${address.address}</a>
                            </div>
                            <div class="value">
                                <span class="value-output">${UTILS.unitsToPkt(address.balance,3)}</span>
                            </div>
                        </div>
                    `)})}const richList=document.querySelector("#rich-list"),btnLoadMore=document.querySelector("#btnLoadMore");let currentPage=0,index=0;getRichList();btnLoadMore.addEventListener("click",getRichList)}}(window.PAGE_RICH_LIST=window.PAGE_RICH_LIST||{}),function(PAGE_DAILY_MINERS){PAGE_DAILY_MINERS.init=()=>{async function getDailyMiners(){let miners=await API.getDailyMinerStats();buildChart(miners)}async function getDailyMiners(){let miners=await API.getDailyMinerStats();buildChart(miners)}function average(ctx){if(ctx.chart.data.datasets.length<2)return 0;const values=ctx.chart.data.datasets[1].data;return values.reduce((a,b)=>a+b,0)/values.length}function buildChart(miners){const annotation={type:"line",borderColor:"black",borderDash:[6,6],borderDashOffset:0,borderWidth:1,label:{display:!0,enabled:!0,content:ctx=>"Average: "+average(ctx).toFixed(2),position:"center"},scaleID:"incomeAxis",value:ctx=>average(ctx),display:ctx=>average(ctx)>0};chart=new Chart(document.querySelector("#chart-daily-miners"),{type:"bar",data:{labels:miners.map(row=>new Date(row.date).toLocaleDateString()),datasets:[{yAxisID:"minersAxis",label:"Miners",data:miners.map(row=>row.totalMiners),borderColor:THEME.getChartColor(),backgroundColor:THEME.getChartColor(),minBarLength:2,order:1}]},options:{responsive:!0,maintainAspectRatio:!1,scales:{x:{display:!1},minersAxis:{beginAtZero:!0,grid:{display:!1},ticks:{color:THEME.getChartLabelColor()}}},plugins:{legend:{display:!1},annotation:{annotations:{annotation}}}}})}async function getMinersList(){btnLoadMore.classList.add("loading");currentPage++;const options={limit:100,page:currentPage};let addresses=await API.getMiners(options);btnLoadMore.classList.remove("d-none");btnLoadMore.classList.remove("loading");buildList(addresses)}function buildList(addresses){if(typeof addresses=="undefined"){btnLoadMore.classList.add("d-none");noFurtherTransactions.classList.remove("d-none");return}currentPage===1&&(minersList.innerHTML="");addresses.forEach(address=>{index++,minersList.insertAdjacentHTML("beforeend",`
                        <div class="list-item tile">
                            <div class="rank"><span class="indicator">${index}</span>${UTILS.formatOwnedAddress({address:address.address,label:"",useName:!0})}</div>
                            <div class="address">
                                <a href="/address/${address.address}" class="hash">${address.address}</a>
                            </div>
                            <div class="value">
                                <span class="value-output">${UTILS.unitsToPkt(address.received,3)}</span>
                            </div>
                        </div>
                    `)})}const minersList=document.querySelector("#miners-list"),btnLoadMore=document.querySelector("#btnLoadMore"),noFurtherTransactions=document.querySelector("#no-further-transactions"),themeSwitcherEl=document.querySelector("#theme-switcher");let currentPage=0,index=0,chart;getDailyMiners();getMinersList();btnLoadMore.addEventListener("click",getMinersList);themeSwitcherEl.addEventListener("themeChanged",()=>{const labelColor=THEME.getChartLabelColor();chart.options.scales.minersAxis.ticks.color=labelColor;chart.update()})}}(window.PAGE_DAILY_MINERS=window.PAGE_DAILY_MINERS||{}),function(PAGE_SAVED_ADDRESSES){PAGE_SAVED_ADDRESSES.init=()=>{async function getAddresses(){buildPlaceholders();const promiseArray=addressesHashes.map(async hash=>{const address=await API.getAddress(hash);addresses.push(address)});await Promise.all(promiseArray);buildAddressList();let totalBalance=0,totalMined24hr=0;addresses.forEach(address=>{totalBalance+=UTILS.unitsToPkt(address.balance,0,!1),totalMined24hr+=UTILS.unitsToPkt(address.mined24,0,!1)});addressesTotalBalance.innerHTML=UTILS.pktToDenomination(totalBalance,2);addressesMined24hr.innerHTML=UTILS.pktToDenomination(totalMined24hr,2);getPrice(totalBalance)}function buildPlaceholders(){addressList.innerHTML="";addressesHashes.forEach(()=>{addressList.insertAdjacentHTML("beforeend",`
                        <div class="list-item tile">
                            <div class="address">
                                <div class="placeholder">-------------------</div>
                            </div>
                            
                            <div class="footer">
                                <div class="value">
                                    <div class="title">Balance</div>
                                    <span class="value-output placeholder">------------</span>
                                </div>
                                <div class="">
                                    <div class="title">Mined Last 24hr</div>
                                    <div class="placeholder">------------</div>
                                </div>
                            </div>
                        </div>
                    `)})}function buildAddressList(){addressList.innerHTML="";addresses.sort((a,b)=>b.balance-a.balance);addresses.forEach(address=>{addressList.insertAdjacentHTML("beforeend",`
                        <div class="list-item tile" data-address="${address.address}">
                            <div class="address">
                                <a href="/address/${address.address}" class="hash">${UTILS.truncateString(address.address,{startChars:8,endChars:8})}</a>
                                <div class="controls">
                                    <div class="dropup">
                                        <button type="button" class="">
                                            <span class="icon material-icons">more_horiz</span>
                                        </button>
                                        <ul class="dropdown-menu">
                                            <li><a class="dropdown-item remove-address" href="#">Un-save</a></li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                            <div class="footer">
                                <div class="value">
                                    <div class="title">Balance</div>
                                    <span class="value-output">${UTILS.unitsToPkt(address.balance,3)}</span>
                                </div>
                                <div class="">
                                    <div class="title">Mined Last 24hr</div>
                                    ${UTILS.unitsToPkt(address.mined24,3)}
                                </div>
                            </div>
                        </div>
                    `)})}async function getMiningIncome(){if(addressesHashes.length){const promiseArray=addressesHashes.map(async hash=>{const options={address:hash,limit:90,page:1};let income=await API.getAddressMiningIncome(options);income.reverse();addressMiningIncome.push(income)});await Promise.all(promiseArray);for(let i=0;i<addressMiningIncome[0].length;i++){let sum=0;addressMiningIncome.forEach(array=>{sum+=parseInt(array[i].received)});miningIncome.push({date:addressMiningIncome[0][i].date,received:sum})}const incomeValues=miningIncome.map(row=>UTILS.unitsToPkt(row.received,2,!1));if(chart){chart.data.datasets[0].data=incomeValues;chart.update();return}chart=new Chart(chartMiningIncome,{type:"bar",data:{labels:miningIncome.map(row=>new Date(row.date).toLocaleDateString()),datasets:[{label:"Income",data:incomeValues,borderColor:THEME.getChartColor(),backgroundColor:THEME.getChartColor(),minBarLength:2}]},options:{responsive:!0,maintainAspectRatio:!1,scales:{x:{display:!1},y:{display:!1}},plugins:{legend:{display:!1}}}})}}async function getPrice(balance){const price=await API.getPrice();addressesTotalValue.innerHTML=`$${UTILS.numberWithCommas(balance*price.pkt,2)}`}function removeAddress(address){addressesHashes=ADDRESS_SAVER.remove(address);addresses=[];addressMiningIncome=[];miningIncome=[];addressesHashes.length?(getAddresses(),getMiningIncome()):buildEmptyState()}function buildEmptyState(){savedAddressesContainer.classList.add("d-none","d-lg-none");emptyStateContainer.classList.remove("d-none","d-lg-none");saveAddressControl.classList.remove("saved")}function disableEmptyState(){savedAddressesContainer.classList.remove("d-none","d-lg-none");emptyStateContainer.classList.add("d-none","d-lg-none")}const addressList=document.querySelector("#address-list"),savedAddressesContainer=document.querySelector("#saved-addresses-container"),emptyStateContainer=document.querySelector("#empty-state-container"),addressesTotalBalance=document.querySelector("#addresses-total-balance"),addressesTotalValue=document.querySelector("#addresses-total-value"),addressesMined24hr=document.querySelector("#addresses-mined-24hr"),chartMiningIncome=document.getElementById("chart-mining-income"),saveAddressControl=document.querySelector(".save-address-control");let addressesHashes=ADDRESS_SAVER.addresses(),addresses=[],addressMiningIncome=[],miningIncome=[],chart;addressesHashes.length?(getAddresses(),getMiningIncome(),disableEmptyState()):buildEmptyState();addressList.addEventListener("click",e=>{if(e.target&&e.target.closest(".remove-address")){e.preventDefault();const address=e.target.closest(".list-item").dataset.address;removeAddress(address)}});saveAddressControl.addEventListener("click",()=>{saveAddressControl.classList.contains("saved")?(saveAddressControl.classList.remove("saved"),ADDRESS_SAVER.remove("pkt1q6hqsqhqdgqfd8t3xwgceulu7k9d9w5t2amath0qxyfjlvl3s3u4sjza2g2")):(saveAddressControl.addEventListener("animationend",function(){saveAddressControl.classList.remove("saving");saveAddressControl.classList.add("saved");addressesHashes=ADDRESS_SAVER.addresses();getAddresses();getMiningIncome();disableEmptyState()},{once:!0}),saveAddressControl.classList.add("saving"),ADDRESS_SAVER.add("pkt1q6hqsqhqdgqfd8t3xwgceulu7k9d9w5t2amath0qxyfjlvl3s3u4sjza2g2"))})}}(window.PAGE_SAVED_ADDRESSES=window.PAGE_SAVED_ADDRESSES||{});typeof initPage=="function"&&initPage();